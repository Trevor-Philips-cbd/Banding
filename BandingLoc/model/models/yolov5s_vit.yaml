# Ultralytics YOLOv5 üöÄ, AGPL-3.0 license

# Parameters
nc: 80 # number of classes
depth_multiple: 0.33 # model depth multiple
width_multiple: 0.50 # layer channel multiple
anchors:
  - [10, 13, 16, 30, 33, 23] # P3/8
  - [30, 61, 62, 45, 59, 119] # P4/16
  - [116, 90, 156, 198, 373, 326] # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [
    [-1, 1, Uformer, {'img_size': 640,          #0
                      'embed_dim': 16, 
                      'modulator': True, 
                      'shift_flag': False}],
    [-2, 1, Conv, [64, 6, 2, 2]], # 0-P1/2       1
    [-1, 1, Conv, [128, 3, 2]], # 1-P2/4         2
    [-1, 3, C3, [128]],                         #3
    [-1, 1, Conv, [256, 3, 2]], # 3-P3/8         4
    [-1, 6, C3, [256]],                         #5
    [-1, 1, Conv, [512, 3, 2]], # 5-P4/16        6
    [-1, 9, C3, [512]],                         #7
    [[-1, 0], 1, Concat, [1]],                  #8
    [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32       9
    [-1, 3, C3, [1024]],                        #10
    [-1, 1, SPPF, [1024, 5]], # 9                11
  ]

# YOLOv5 v6.0 head
head: [
    [-1, 1, Conv, [512, 1, 1]],                       #12
    [-1, 1, nn.Upsample, [None, 2, "nearest"]],       #13
    [[-1, 6], 1, Concat, [1]], # cat backbone P4       14      Ëøô‰∏ãÈù¢ÁöÑconcatÁöÑËæìÂÖ•ÈÉΩË¶ÅÊîπ
    [-1, 3, C3, [512, False]], # 13                    15

    [-1, 1, Conv, [256, 1, 1]],                       #16
    [-1, 1, nn.Upsample, [None, 2, "nearest"]],       #17
    [[-1, 4], 1, Concat, [1]], # cat backbone P3       18
    [-1, 3, C3, [256, False]], # 17 (P3/8-small)       19

    [-1, 1, Conv, [256, 3, 2]],                       #20
    [[-1, 14], 1, Concat, [1]], # cat head P4          21
    [-1, 3, C3, [512, False]], # 20 (P4/16-medium)     22

    [-1, 1, Conv, [512, 3, 2]],                       #23
    [[-1, 10], 1, Concat, [1]], # cat head P5          24
    [-1, 3, C3, [1024, False]], # 23 (P5/32-large)     25

    [[17, 20, 23], 1, Detect, [nc, anchors]], # Detect(P3, P4, P5)
  ]
